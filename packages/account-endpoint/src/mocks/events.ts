import { APIGatewayEvent } from "aws-lambda";

export const GetUserByIdEvent = {
  resource: "/v1/users/{userId}",
  path: "/v1/users/usr-test",
  httpMethod: "GET",
  headers: {
    Accept: "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "Cache-Control": "no-cache",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-ASN": "42973",
    "CloudFront-Viewer-Country": "GB",
    Host: "test.io",
    "Postman-Token": "token",
    "User-Agent": "PostmanRuntime/7.43.0",
    Via: "1.1 test.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "id==",
    "X-Amzn-Trace-Id": "Root=1-root-id",
    "x-api-key": "key",
    "X-Forwarded-For": "000.000.000.000, 0.000.0.000",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
    "Accept-Encoding": ["gzip, deflate, br"],
    "Cache-Control": ["no-cache"],
    "CloudFront-Forwarded-Proto": ["https"],
    "CloudFront-Is-Desktop-Viewer": ["true"],
    "CloudFront-Is-Mobile-Viewer": ["false"],
    "CloudFront-Is-SmartTV-Viewer": ["false"],
    "CloudFront-Is-Tablet-Viewer": ["false"],
    "CloudFront-Viewer-ASN": ["42973"],
    "CloudFront-Viewer-Country": ["GB"],
    Host: ["test.io"],
    "Postman-Token": ["token"],
    "User-Agent": ["PostmanRuntime/7.43.0"],
    Via: ["1.1 test.cloudfront.net (CloudFront)"],
    "X-Amz-Cf-Id": ["id=="],
    "X-Amzn-Trace-Id": ["Root=1-root"],
    "x-api-key": ["key"],
    "X-Forwarded-For": ["000.000.000.000, 0.000.0.000"],
    "X-Forwarded-Port": ["443"],
    "X-Forwarded-Proto": ["https"],
  },
  queryStringParameters: null,
  multiValueQueryStringParameters: null,
  pathParameters: {
    userId: "usr-123",
  },
  stageVariables: {
    lambdaStage: "test",
  },
  requestContext: {
    resourceId: "zjpvlf",
    resourcePath: "/v1/users/{userId}",
    httpMethod: "GET",
    extendedRequestId: "IR1eUHY5IAMEmPQ=",
    requestTime: "31/Mar/2025:06:28:04 +0000",
    path: "/v1/users/usr-test",
    accountId: "041270613339",
    protocol: "HTTP/1.1",
    stage: "dev",
    domainPrefix: "test",
    requestTimeEpoch: 1743402484833,
    requestId: "id",
    identity: {
      cognitoIdentityPoolId: null,
      cognitoIdentityId: null,
      apiKey: "key",
      principalOrgId: null,
      cognitoAuthenticationType: null,
      userArn: null,
      apiKeyId: "id",
      userAgent: "PostmanRuntime/7.43.0",
      accountId: null,
      caller: null,
      sourceIp: "000.000.000.000",
      accessKey: null,
      cognitoAuthenticationProvider: null,
      user: null,
    },
    domainName: "test.io",
    deploymentId: "id",
    apiId: "id",
  },
  body: null,
  isBase64Encoded: false,
} as unknown as APIGatewayEvent;

export const CreateBankAccountEvent = {
  resource: "/v1/accounts/",
  path: "/v1/accounts/",
  httpMethod: "POST",
  headers: {
    Accept: "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "Cache-Control": "no-cache",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-ASN": "42973",
    "CloudFront-Viewer-Country": "GB",
    Host: "test.io",
    "Postman-Token": "token",
    "User-Agent": "PostmanRuntime/7.43.0",
    Via: "1.1 test.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "id==",
    "X-Amzn-Trace-Id": "Root=1-root-id",
    "x-api-key": "key",
    "X-Forwarded-For": "000.000.000.000, 0.000.0.000",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
    "Accept-Encoding": ["gzip, deflate, br"],
    "Cache-Control": ["no-cache"],
    "CloudFront-Forwarded-Proto": ["https"],
    "CloudFront-Is-Desktop-Viewer": ["true"],
    "CloudFront-Is-Mobile-Viewer": ["false"],
    "CloudFront-Is-SmartTV-Viewer": ["false"],
    "CloudFront-Is-Tablet-Viewer": ["false"],
    "CloudFront-Viewer-ASN": ["42973"],
    "CloudFront-Viewer-Country": ["GB"],
    Host: ["test.io"],
    "Postman-Token": ["token"],
    "User-Agent": ["PostmanRuntime/7.43.0"],
    Via: ["1.1 test.cloudfront.net (CloudFront)"],
    "X-Amz-Cf-Id": ["id=="],
    "X-Amzn-Trace-Id": ["Root=1-root"],
    "x-api-key": ["key"],
    "X-Forwarded-For": ["000.000.000.000, 0.000.0.000"],
    "X-Forwarded-Port": ["443"],
    "X-Forwarded-Proto": ["https"],
  },
  queryStringParameters: null,
  multiValueQueryStringParameters: null,
  pathParameters: null,
  stageVariables: {
    lambdaStage: "test",
  },
  requestContext: {
    resourceId: "zjpvlf",
    resourcePath: "/v1/accounts/",
    httpMethod: "POST",
    extendedRequestId: "IR1eUHY5IAMEmPQ=",
    requestTime: "31/Mar/2025:06:28:04 +0000",
    path: "/v1/accounts",
    accountId: "041270613339",
    protocol: "HTTP/1.1",
    stage: "dev",
    domainPrefix: "test",
    requestTimeEpoch: 1743402484833,
    requestId: "id",
    identity: {
      cognitoIdentityPoolId: null,
      cognitoIdentityId: null,
      apiKey: "key",
      principalOrgId: null,
      cognitoAuthenticationType: null,
      userArn: null,
      apiKeyId: "id",
      userAgent: "PostmanRuntime/7.43.0",
      accountId: null,
      caller: null,
      sourceIp: "000.000.000.000",
      accessKey: null,
      cognitoAuthenticationProvider: null,
      user: null,
    },
    domainName: "test.io",
    deploymentId: "id",
    apiId: "id",
  },
  body: '{\n    "name": "test account",\n    "accountType": "personal"\n}',
  isBase64Encoded: false,
} as unknown as APIGatewayEvent;

export const DeleteUserEvent = {
  resource: "/v1/users/{userId}",
  path: "/v1/users/usr-test",
  httpMethod: "DELETE",
  headers: {
    Accept: "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "Cache-Control": "no-cache",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-ASN": "42973",
    "CloudFront-Viewer-Country": "GB",
    Host: "test.io",
    "Postman-Token": "token",
    "User-Agent": "PostmanRuntime/7.43.0",
    Via: "1.1 test.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "id==",
    "X-Amzn-Trace-Id": "Root=1-root-id",
    "x-api-key": "key",
    "X-Forwarded-For": "000.000.000.000, 0.000.0.000",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
    "Accept-Encoding": ["gzip, deflate, br"],
    "Cache-Control": ["no-cache"],
    "CloudFront-Forwarded-Proto": ["https"],
    "CloudFront-Is-Desktop-Viewer": ["true"],
    "CloudFront-Is-Mobile-Viewer": ["false"],
    "CloudFront-Is-SmartTV-Viewer": ["false"],
    "CloudFront-Is-Tablet-Viewer": ["false"],
    "CloudFront-Viewer-ASN": ["42973"],
    "CloudFront-Viewer-Country": ["GB"],
    Host: ["test.io"],
    "Postman-Token": ["token"],
    "User-Agent": ["PostmanRuntime/7.43.0"],
    Via: ["1.1 test.cloudfront.net (CloudFront)"],
    "X-Amz-Cf-Id": ["id=="],
    "X-Amzn-Trace-Id": ["Root=1-root"],
    "x-api-key": ["key"],
    "X-Forwarded-For": ["000.000.000.000, 0.000.0.000"],
    "X-Forwarded-Port": ["443"],
    "X-Forwarded-Proto": ["https"],
  },
  queryStringParameters: null,
  multiValueQueryStringParameters: null,
  pathParameters: {
    userId: "usr-123",
  },
  stageVariables: {
    lambdaStage: "test",
  },
  requestContext: {
    resourceId: "zjpvlf",
    resourcePath: "/v1/users/{userId}",
    httpMethod: "DELETE",
    extendedRequestId: "IR1eUHY5IAMEmPQ=",
    requestTime: "31/Mar/2025:06:28:04 +0000",
    path: "/v1/users/usr-test",
    accountId: "041270613339",
    protocol: "HTTP/1.1",
    stage: "dev",
    domainPrefix: "test",
    requestTimeEpoch: 1743402484833,
    requestId: "id",
    identity: {
      cognitoIdentityPoolId: null,
      cognitoIdentityId: null,
      apiKey: "key",
      principalOrgId: null,
      cognitoAuthenticationType: null,
      userArn: null,
      apiKeyId: "id",
      userAgent: "PostmanRuntime/7.43.0",
      accountId: null,
      caller: null,
      sourceIp: "000.000.000.000",
      accessKey: null,
      cognitoAuthenticationProvider: null,
      user: null,
    },
    domainName: "test.io",
    deploymentId: "id",
    apiId: "id",
  },
  body: null,
  isBase64Encoded: false,
} as unknown as APIGatewayEvent;

export const UpdateUserEvent = {
  resource: "/v1/users/{userId}",
  path: "/v1/users/usr-test",
  httpMethod: "PATCH",
  headers: {
    Accept: "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "Cache-Control": "no-cache",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-ASN": "42973",
    "CloudFront-Viewer-Country": "GB",
    Host: "test.io",
    "Postman-Token": "token",
    "User-Agent": "PostmanRuntime/7.43.0",
    Via: "1.1 test.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "id==",
    "X-Amzn-Trace-Id": "Root=1-root-id",
    "x-api-key": "key",
    "X-Forwarded-For": "000.000.000.000, 0.000.0.000",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
    "Accept-Encoding": ["gzip, deflate, br"],
    "Cache-Control": ["no-cache"],
    "CloudFront-Forwarded-Proto": ["https"],
    "CloudFront-Is-Desktop-Viewer": ["true"],
    "CloudFront-Is-Mobile-Viewer": ["false"],
    "CloudFront-Is-SmartTV-Viewer": ["false"],
    "CloudFront-Is-Tablet-Viewer": ["false"],
    "CloudFront-Viewer-ASN": ["42973"],
    "CloudFront-Viewer-Country": ["GB"],
    Host: ["test.io"],
    "Postman-Token": ["token"],
    "User-Agent": ["PostmanRuntime/7.43.0"],
    Via: ["1.1 test.cloudfront.net (CloudFront)"],
    "X-Amz-Cf-Id": ["id=="],
    "X-Amzn-Trace-Id": ["Root=1-root"],
    "x-api-key": ["key"],
    "X-Forwarded-For": ["000.000.000.000, 0.000.0.000"],
    "X-Forwarded-Port": ["443"],
    "X-Forwarded-Proto": ["https"],
  },
  queryStringParameters: null,
  multiValueQueryStringParameters: null,
  pathParameters: {
    userId: "usr-123",
  },
  stageVariables: {
    lambdaStage: "test",
  },
  requestContext: {
    resourceId: "zjpvlf",
    resourcePath: "/v1/users/{userId}",
    httpMethod: "PATCH",
    extendedRequestId: "IR1eUHY5IAMEmPQ=",
    requestTime: "31/Mar/2025:06:28:04 +0000",
    path: "/v1/users/usr-test",
    accountId: "041270613339",
    protocol: "HTTP/1.1",
    stage: "dev",
    domainPrefix: "test",
    requestTimeEpoch: 1743402484833,
    requestId: "id",
    identity: {
      cognitoIdentityPoolId: null,
      cognitoIdentityId: null,
      apiKey: "key",
      principalOrgId: null,
      cognitoAuthenticationType: null,
      userArn: null,
      apiKeyId: "id",
      userAgent: "PostmanRuntime/7.43.0",
      accountId: null,
      caller: null,
      sourceIp: "000.000.000.000",
      accessKey: null,
      cognitoAuthenticationProvider: null,
      user: null,
    },
    domainName: "test.io",
    deploymentId: "id",
    apiId: "id",
  },
  body: '{\n    "name": "test user",\n    "phoneNumber": "0123456789",\n    "email": "test@email.com",\n   "address": {\n        "line1": "123 Test Street",\n        "town": "Test Town",\n        "county": "Test County",\n        "postcode": "TE5 6ST"\n    }\n}',
  isBase64Encoded: false,
} as unknown as APIGatewayEvent;
